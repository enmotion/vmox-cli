#!/usr/bin/env node
const { program } = require('commander');
const inquirer = require('inquirer');
const { execSync } = require('child_process');
const fsExtra = require('fs-extra');

program.version('1.0.0');

const repository = "https://github.com/enmotion/vmox-base-project.git";

program
  .command('create <appName>')
  .description('Create a new vmox project')
  .action((appName) => {
    inquirer
      .prompt([
        {
          type: 'input',
          name: 'appName',
          message: 'Enter appName:',
        },
        {
          type: 'input',
          name: 'author',
          message: 'Enter author:',
        },
      ])
      .then(async (answers) => {
        const needReplaceFiles = ['./package.json','./README.md'];
        const configMapping = [
          {k:'appName',v:'vmox-base-project'},
          {k:'author',v:'enmotion'}
        ];
        const handleError = err => {
          console.error(`Failed to create app folder '${appName}'. ${err.message}`);
          process.exit(1);
        };
        try {
          // 创建项目的文件夹，当前位置必须没有该文件夹方可创建
          fsExtra.pathExists(`./${appName}`,(err,exists)=>{
            if (err) {
              console.log(`Error:${err.message}`);
              return;
            };
            if(!exists) {
              execSync(`mkdir -p ${appName}`); // 创建文件夹
              process.chdir(appName); // 进入创建文件夹
              console.log("Pulling code");
              execSync(`git clone ${repository} vmox-base-project`);
              console.log("Pull code completed");
              const excludedFolders = ['.git']; // 忽视文件夹
              // 定义过滤器函数
              function filterFunc(source, destination) {
                const folderName = source.substring(source.lastIndexOf('/') + 1); // 根据路径获取文件夹名称
                return !excludedFolders.includes(folderName);
              };
              fsExtra.copy("./vmox-base-project", "./", { filter: filterFunc })
              .then(() => {
                console.log('init complete');
                execSync(`rm -rf vmox-base-project`);  // 拉取代码
              })
              // .then(()=>{
              //   // needReplaceFiles.forEach(path=>{
              //   //   replaceContentToFile(path,configMapping);
              //   // })
              // })
              .catch((err) => {
                console.error(err);
              }); //
            } else {
              throw Error(`${appName} is already existed`);
            }
          });
        } catch (error) {
          handleError(error);
        }
        console.log(answers);
      });
  });

function replaceContentToFile(path,configMapping){
  fsExtra.readFile(path, 'utf-8', (err, data) => {
    if (err) {
      console.error(err);
      return;
    }
    // 替换文件中的内容
    console.log(data,configMapping,11112333);
    // const updatedContent = data.replace(new RegExp(searchStr, 'g'), replaceStr);
    // console.log(updatedContent,33000)
    // // 将替换后的内容写回到文件中
    // fsExtra.writeFile(path, updatedContent, 'utf-8', (err) => {
    //   if (err) {
    //     console.error(err);
    //     return;
    //   }
    //   console.log('文件内容替换成功！');
    // });
  });
};

program.parse(process.argv);
