#!/usr/bin/env node
const { program } = require('commander');
const inquirer = require('inquirer');
const { execSync } = require('child_process');
const fs = require('fs-extra');

program.version('1.0.0');

const repository = "https://github.com/enmotion/vmox-base-project.git";
program
  .command('create <appName>')
  .description('Create a new vmox project')
  .action((appName) => {

    inquirer
      .prompt([
        {
          type: 'input',
          name: 'arg1',
          message: 'Enter arg1:',
        },
        {
          type: 'input',
          name: 'arg2',
          message: 'Enter arg2:',
        },
      ])
      .then(async (answers) => {
        // 创建项目文件夹
        const handleError = err => {
          console.error(`Failed to create app folder '${appName}'. ${error.message}`);
          process.exit(1);
        };
        try {
          execSync(`mkdir -p ${appName}`); // 创建文件夹
          process.chdir(appName); // 进入创建文件夹
          execSync(`git clone ${repository} vmox-base-project` );  // 拉取代码
          console.log("Code pull completed"); 
          const excludedFolders = ['.git']; // 忽视文件夹
          // 定义过滤器函数
          function filterFunc(source, destination) {
            const folderName = source.substring(source.lastIndexOf('/') + 1); // 根据路径获取文件夹名称
            return !excludedFolders.includes(folderName);
          };
          fs.copy("./vmox-base-project", "./", { filter: filterFunc })
            .then(() => {
              console.log('工程初始化完成');
              execSync(`rm -rf vmox-base-project`);  // 拉取代码
            })
            .catch((err) => {
              console.error(err);
            }); // 
        } catch (error) {
          handleError(err);
        }
        const { arg1, arg2 } = answers;
        console.log('arg1:', arg1);
        console.log('arg2:', arg2);
      });
  });

// program
//   .command('s <name>')
//   .description('shit hello vmox')
//   .action((name) => {
//     console.log('shit ' + name);
//   });

program.parse(process.argv);
